<?xml version="1.0"?>
<doc>
    <assembly>
        <name>POmronFinsTCP.Net</name>
    </assembly>
    <members>
        <member name="M:POmronFinsTCP.Net.ConvertClass.GetPlcMemory(System.String,System.String@)">
            <summary>
            得到枚举值
            </summary>
            <param name="txt">如：D100,W100.1</param>
            <param name="txtq"></param>
            <returns></returns>
        </member>
        <member name="T:POmronFinsTCP.Net.PlcMemory">
            <summary>
            寄存器类型,十六进制表示形式
            </summary>
        </member>
        <member name="T:POmronFinsTCP.Net.MemoryType">
            <summary>
            地址类型
            </summary>
        </member>
        <member name="T:POmronFinsTCP.Net.DataType">
            <summary>
            数据类型,PLC字为16位数，最高位为符号位，负数表现形式为“取反加一”
            </summary>
        </member>
        <member name="T:POmronFinsTCP.Net.BitState">
            <summary>
            bit位开关状态，on=1，off=0
            </summary>
        </member>
        <member name="T:POmronFinsTCP.Net.RorW">
            <summary>
            区分指令的读写类型
            </summary>
        </member>
        <member name="M:POmronFinsTCP.Net.ErrorCode.CheckHeadError(System.Byte)">
            <summary>
            （若返回的头指令为3）检查命令头中的错误代码
            </summary>
            <param name="Code">错误代码</param>
            <returns>指示程序是否可以继续进行</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.ErrorCode.CheckEndCode(System.Byte,System.Byte)">
            <summary>
            检查命令帧中的EndCode
            </summary>
            <param name="Main">主码</param>
            <param name="Sub">副码</param>
            <returns>指示程序是否可以继续进行</returns>
        </member>
        <member name="P:POmronFinsTCP.Net.EtherNetPLC.PlcNode">
            <summary>
            PLC节点号
            </summary>
        </member>
        <member name="P:POmronFinsTCP.Net.EtherNetPLC.PcNode">
            <summary>
            PC节点号
            </summary>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.FinsCmd(POmronFinsTCP.Net.RorW,POmronFinsTCP.Net.PlcMemory,POmronFinsTCP.Net.MemoryType,System.Int16,System.Int16,System.Int16)">
            <summary>
            Fins读写指令生成
            </summary>
            <param name="rw">读写类型</param>
            <param name="mr">寄存器类型</param>
            <param name="mt">地址类型</param>
            <param name="ch">起始地址</param>
            <param name="offset">位地址：00-15,字地址则为00</param>
            <param name="cnt">地址个数,按位读写只能是1</param>
            <returns></returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.#ctor">
            <summary>
            实例化PLC操作对象
            </summary>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.Link(System.String,System.Int32,System.Int16)">
            <summary>
            与PLC建立TCP连接
            </summary>
            <param name="rIP">PLC的IP地址</param>
            <param name="rPort">端口号，一般为9600</param>
            <param name="timeOut">超时时间，默认3000毫秒</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.Close">
            <summary>
            关闭PLC操作对象的TCP连接
            </summary>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.GetData``1(System.String)">
            <summary>
            得到一个数据
            </summary>
            <typeparam name="T">支持：int16,int32,bool,float</typeparam>
            <param name="mrch">起始地址（地址：D100；位：W100.1）</param>
            <returns>结果值</returns>
            <exception cref="T:System.Exception">暂不支持此类型</exception>
            <exception cref="T:System.Exception">读取数据失败</exception>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.GetData``1(POmronFinsTCP.Net.PlcMemory,System.Object)">
            <summary>
            得到一个数据
            </summary>
            <typeparam name="T">支持：int16,int32,bool,float</typeparam>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址（地址：100；位：100.01）</param>
            <returns>结果值</returns>
            <exception cref="T:System.Exception">暂不支持此类型</exception>
            <exception cref="T:System.Exception">读取数据失败</exception>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.SetData``1(System.String,``0)">
            <summary>
            设置一个数据
            </summary>
            <typeparam name="T">支持：int16,int32,bool,float</typeparam>
            <param name="mrch">起始地址（地址：D100；位：W100.1）</param>
            <param name="inData">写入的数据</param>
            <returns>是否成功</returns>
            <exception cref="T:System.Exception">暂不支持此类型</exception>
            <exception cref="T:System.Exception">写入数据失败</exception>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.SetData``1(POmronFinsTCP.Net.PlcMemory,System.Object,``0)">
            <summary>
            设置一个数据
            </summary>
            <typeparam name="T">支持：int16,int32,bool,float</typeparam>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址（地址：100；位：100.01）</param>
            <param name="inData">写入的数据</param>
            <returns>是否成功</returns>
            <exception cref="T:System.Exception">暂不支持此类型</exception>
            <exception cref="T:System.Exception">写入数据失败</exception>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.GetDatas``1(System.String,System.Int32)">
            <summary>
            得到多个数据
            </summary>
            <typeparam name="T">支持：int16,int32,bool,float</typeparam>
            <param name="mrch">起始地址（地址：D100；位：W100.1）</param>
            <param name="count">读取个数</param>
            <returns>结果值</returns>
            <exception cref="T:System.Exception">暂不支持此类型</exception>
            <exception cref="T:System.Exception">读取数据失败</exception>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.GetDatas``1(POmronFinsTCP.Net.PlcMemory,System.Object,System.Int32)">
            <summary>
            得到多个数据
            </summary>
            <typeparam name="T">支持：int16,int32,bool,float</typeparam>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址（地址：100；位：100.01）</param>
            <param name="count">读取个数</param>
            <returns>结果值</returns>
            <exception cref="T:System.Exception">暂不支持此类型</exception>
            <exception cref="T:System.Exception">读取数据失败</exception>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.SetDatas``1(System.String,``0[])">
            <summary>
            设置多个数据
            </summary>
            <typeparam name="T">支持：int16,</typeparam>
            <param name="mrch">起始地址（地址：D100；位：W100.1）</param>
            <param name="inDatas">写入的数据</param>
            <returns>是否成功</returns>
            <exception cref="T:System.Exception">暂不支持此类型</exception>
            <exception cref="T:System.Exception">写入数据失败</exception>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.SetDatas``1(POmronFinsTCP.Net.PlcMemory,System.Object,``0[])">
            <summary>
            设置多个数据
            </summary>
            <typeparam name="T">支持：int16,</typeparam>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址（地址：100；位：100.01）</param>
            <param name="inDatas">写入的数据</param>
            <returns>是否成功</returns>
            <exception cref="T:System.Exception">暂不支持此类型</exception>
            <exception cref="T:System.Exception">写入数据失败</exception>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.ReadWords(System.String,System.Int16,System.Int16[]@)">
            <summary>
            读值方法（多个连续值）
            </summary>
            <param name="mrch">起始地址。如：D100,W100.1</param>
            <param name="cnt">地址个数</param>
            <param name="reData">返回值</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.ReadWords(POmronFinsTCP.Net.PlcMemory,System.Int16,System.Int16,System.Int16[]@)">
            <summary>
            读值方法（多个连续值）
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址</param>
            <param name="cnt">地址个数</param>
            <param name="reData">返回值</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.ReadWord(System.String,System.Int16@)">
            <summary>
            读单个字方法
            </summary>
            <param name="mrch">起始地址。如：D100,W100.1</param>
            <param name="reData">返回值</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.ReadWord(POmronFinsTCP.Net.PlcMemory,System.Int16,System.Int16@)">
            <summary>
            读单个字方法
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址</param>
            <param name="reData">返回值</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.WriteWords(System.String,System.Int16,System.Int16[])">
            <summary>
            写值方法（多个连续值）
            </summary>
            <param name="mrch">起始地址。如：D100,W100.1</param>
            <param name="cnt">地址个数</param>
            <param name="inData">写入值</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.WriteWords(POmronFinsTCP.Net.PlcMemory,System.Int16,System.Int16,System.Int16[])">
            <summary>
            写值方法（多个连续值）
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址</param>
            <param name="cnt">地址个数</param>
            <param name="inData">写入值</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.WriteWord(System.String,System.Int16)">
            <summary>
            写单个字方法
            </summary>
            <param name="mrch">起始地址。如：D100,W100.1</param>
            <param name="inData">写入数据</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.WriteWord(POmronFinsTCP.Net.PlcMemory,System.Int16,System.Int16)">
            <summary>
            写单个字方法
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">地址</param>
            <param name="inData">写入数据</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.GetBitState(System.String,System.Int16@)">
            <summary>
            读值方法-按位bit（单个）
            </summary>
            <param name="mrch">起始地址。如：W100.1</param>
            <param name="bs">返回开关状态枚举EtherNetPLC.BitState，0/1</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.GetBitStates(System.String,System.Boolean[]@,System.Int16)">
            <summary>
            读值方法-按位bit（单个）
            </summary>
            <param name="mrch">起始地址。如：W100.1</param>
            <param name="bs">返回开关状态枚举EtherNetPLC.BitState，0/1</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.GetBitStates(POmronFinsTCP.Net.PlcMemory,System.String,System.Boolean[]@,System.Int16)">
            <summary>
            读值方法-按位bit（单个）
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">地址000.00</param>
            <param name="bs">返回开关状态枚举EtherNetPLC.BitState，0/1</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.GetBitState(POmronFinsTCP.Net.PlcMemory,System.String,System.Int16@)">
            <summary>
            读值方法-按位bit（单个）
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">地址000.00</param>
            <param name="bs">返回开关状态枚举EtherNetPLC.BitState，0/1</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.SetBitState(System.String,POmronFinsTCP.Net.BitState)">
            <summary>
            写值方法-按位bit（单个）
            </summary>
            <param name="mrch">起始地址。如：W100.1</param>
            <param name="bs">开关状态枚举EtherNetPLC.BitState，0/1</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.SetBitState(POmronFinsTCP.Net.PlcMemory,System.String,POmronFinsTCP.Net.BitState)">
            <summary>
            写值方法-按位bit（单个）
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">地址000.00</param>
            <param name="bs">开关状态枚举EtherNetPLC.BitState，0/1</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.ReadReal(System.String,System.Single@)">
            <summary>
            读一个浮点数的方法，单精度，在PLC中占两个字
            </summary>
            <param name="mrch">起始地址，会读取两个连续的地址，因为单精度在PLC中占两个字</param>
            <param name="reData">返回一个float型</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.ReadReal(POmronFinsTCP.Net.PlcMemory,System.Int16,System.Single@)">
            <summary>
            读一个浮点数的方法，单精度，在PLC中占两个字
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址，会读取两个连续的地址，因为单精度在PLC中占两个字</param>
            <param name="reData">返回一个float型</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.WriteReal(System.String,System.Single)">
            <summary>
            写一个浮点数的方法，单精度，在PLC中占两个字
            </summary>
            <param name="mrch">起始地址，会读取两个连续的地址，因为单精度在PLC中占两个字</param>
            <param name="reData">返回一个float型</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.WriteReal(POmronFinsTCP.Net.PlcMemory,System.Int16,System.Single)">
            <summary>
            写一个浮点数的方法，单精度，在PLC中占两个字
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址，会读取两个连续的地址，因为单精度在PLC中占两个字</param>
            <param name="reData">返回一个float型</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.ReadInt32(System.String,System.Int32@)">
            <summary>
            读一个int32的方法，在PLC中占两个字
            </summary>
            <param name="mrch">起始地址，会读取两个连续的地址，因为int32在PLC中占两个字</param>
            <param name="reData">返回一个int型</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.ReadInt32(POmronFinsTCP.Net.PlcMemory,System.Int16,System.Int32@)">
            <summary>
            读一个int32的方法，在PLC中占两个字
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址，会读取两个连续的地址，因为int32在PLC中占两个字</param>
            <param name="reData">返回一个int型</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.WriteInt32(System.String,System.Int32)">
            <summary>
            写一个int32的方法，在PLC中占两个字
            </summary>
            <param name="mrch">起始地址，会读取两个连续的地址，因为int32在PLC中占两个字</param>
            <param name="reData">返回一个int型</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.EtherNetPLC.WriteInt32(POmronFinsTCP.Net.PlcMemory,System.Int16,System.Int32)">
            <summary>
            写一个int32的方法，在PLC中占两个字
            </summary>
            <param name="mr">地址类型枚举</param>
            <param name="ch">起始地址，会读取两个连续的地址，因为int32在PLC中占两个字</param>
            <param name="reData">返回一个int型</param>
            <returns>0为成功</returns>
        </member>
        <member name="M:POmronFinsTCP.Net.FinsClass.GetMemoryCode(POmronFinsTCP.Net.PlcMemory,POmronFinsTCP.Net.MemoryType)">
            <summary>
            获取内存区码
            </summary>
            <param name="mr">寄存器类型</param>
            <param name="mt">地址类型</param>
            <returns></returns>
        </member>
        <member name="M:POmronFinsTCP.Net.FinsClass.HandShake">
            <summary>
            PC请求连接的握手信号，第一次连接会分配PC节点号
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
